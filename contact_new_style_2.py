# Импортируется модуль os для удаления текстового файла.
import os
# Из модуля datetime импортируется класс datetime.
from datetime import datetime
# Импортируется модуль sys для выполнения выхода из программы.
import sys


def input_contact():
    '''Получение данных с клавиатуры и формирование
       строки для записи в текстовый файл.'''
    last_name = input(' Введите фамилию: ')
    first_name = input(' Введите имя (Отчество): ')    
    address = input(' Введите адрес: ')
    phone_number = input(' Введите телефонный номер: ')
    email = input(' Введите электронный адрес: ')
    add_inform = input(' Дополнительная информация: ')
    # Получение даты и времени из ОС и присвоение
    # в виде строки переменной dt.
    dt = datetime.now().strftime('%d.%m.%Y %H:%M:%S')
    # Формирование строки с данными одного контакта. 
    contact = last_name + '&' + first_name + '&' + \
              address + '&' + phone_number + '&' + \
              email + '&' + add_inform + '&' + dt + '\n'
    return contact

def write_contact_txt(file_name, contact):
    '''Для записи контакта в текстовый файл. 
       Отрытие файла. Запись. Закрытие файла'''
    file_txt = open(file_name, 'a')
    file_txt.write(contact)
    file_txt.close()

def read_contact_txt(file_name):
    '''Для получения данных из текстового файла.
       Обработка данных. Вызов функции для
       вывода на печать всех контактов'''
    file_txt_r = open(file_name, 'r') # Открытие файла для чтения данных.        
    contact_number = 0 # Начальное значение переменной для формирования номера контакта.
    while True: # Бесконечный цикл для обработки контактов построчно.
        data_str_n = file_txt_r.readline() # Получение строки. 
        if data_str_n == '': # Если строка пустая то выход из цикла.
            file_txt_r.close() # Закрытие текстового файла.
            break # Выход из цикла.
        contact_number += 1 # Присваевается номер контакта.
                            # С каждым проходом цикла увеличивается на единицу.
        # Функция print_contact() принимает два аргумента.        
        print_contact(data_str_n, contact_number) # Функция вывода на печать.

def print_contact(data_str_n, contact_number):
    '''Получает строку контакта и его номер.
       Обработка данных. Вывод на печать контакта'''
    data_str = data_str_n.rstrip('\n') # Удаляет '\n' в конце строки.
    data_list = data_str.split('&')    # Полученная строка разделяется по символу &.
                                       # Формируется список data_list.
    contact_last_name = data_list[0]       # Получение фамилии.
    contact_first_name = data_list[1]      # Получение имени.
    contact_address = data_list[2]         # Получение адреса.   
    contact_phone_number = data_list[3]    # Получение номера телефона.
    contact_date_time_write = data_list[4] # Получение даты и времени записи контакта.
    contact_email = data_list[4]           # Получение электронного адреса.
    contact_add_inform = data_list[5]      # Получение дополнительной информации.
    contact_dt = data_list[6]              # Получение даты и времени записи контакта.
    #----------------------Вывод на печать контакта абонента------------------------
    pr_line_1 = f'-----------------------------------Контакт №{contact_number}'
    pr_line_2 = f'---------{contact_dt}---------'
    print(pr_line_1 + pr_line_2)
    print(' Фамилия: ', contact_last_name)
    print(' Имя (Отчество): ', contact_first_name)
    print(' Адрес: ', contact_address)
    print(' Номер телефона: ', contact_phone_number)
    print(' Электронный адрес: ', contact_email)
    print(' Дополнительная информация: ', contact_add_inform)
    #--------------------------------------------------------------------------------
    
def find_contact(file_name, find_str):
    '''Для поиска контакта по элементу данных переданных в виде строки.
       Обработка данных. Вызов функции для
       вывода на печать найденного контакта(ов)'''
    file_txt_r = open(file_name, 'r') # Открытие файла для чтения данных.
    contact_number = 0 # Начальное значение переменной для формирования номера контакта.
    id_str = '' # Создаётся пустая строка.
    while True: # Бесконечный цикл для обработки контактов построчно.
        data_str_n = file_txt_r.readline() # Получение строки. 
        if data_str_n == '': # Если строка пустая то выход из цикла.
            if id_str.find('1') == -1: # Перед выходом из цикла проверяем строку 
                                       # id_str на наличие идентификатора(ов) совпадений.
                                       # Если условие верно значит совпадений нет.
                print('                                  ------------------') # Вывод на печать.
                print('                                  | СОВПАДЕНИЙ НЕТ |') # Вывод на печать.
                print('                                  ------------------') # Вывод на печать.
                file_txt_r.close() # Закрытие текстового файла.
            break # Выход из цикла
        data_str = data_str_n.rstrip('\n') # Удаляет '\n' в конце строки.
        contact_number += 1 # Присваевается номер контакта.
                            # С каждым проходом цикла увеличивается на единицу.
        find_str_lower = find_str.lower() # Переменной find_str_lower присваивается
                                          # строка элемента для поиска преобразованная
                                          # к нижнему регистру.
        data_str_lower = data_str.lower() # Переменной data_str_lower присваивается
                                          # строка контакта, полученная их текстового файла,
                                          # преобразованная к нижнему регистру.
        if data_str_lower.find(find_str_lower) != -1: # Если совпадения есть, к строке
                                                      # id_str прибавляется '1'.
            id_str = id_str + '1' 
            print_contact(data_str, contact_number) # Функция вывода на печать.                 
        else:                             # Иначе к строке id_str прибавляется '0'.
            id_str = id_str + '0'

def del_contact(file_name, contact_number_for_del):
    '''Получает номер контакта. Удаляет контакт'''
    file_txt_r = open(file_name, 'r') # Открытие файла для чтения данных.
    contact_number = 0 # Начальное значение переменной для формирования номера контакта.
    list_for_new_txt = [] # Пустой список для формирования списка с контактами.
    while True: # Бесконечный цикл для обработки контактов построчно.
        data_str = file_txt_r.readline() # Получение строки контакта.
        if data_str == '': # Если строка пустая выход из цикла.
            file_txt_r.close() # Закрытие файла. 
            if contact_number_for_del > str(contact_number):
                print(' Контакта с таким номером не существует')    
            break # Выход из цикла.
        contact_number += 1 # Присваевается номер контакта.
                            # С каждым проходом цикла увеличивается на единицу.
                            
        # Если номер контакта совпадает с номером контакта для удаления
        # эта строка контакта не добавляется в список list_for_new_txt.
        # Из списка list_for_new_txt сформируется новый текстовый файл 
        # без удалённого контакта.                         
        if str(contact_number) == contact_number_for_del:
            contact_for_del = data_str # В переменной contact_for_del
                                       # сохраняется строка с данными 
                                       # контакта для удаления.
            continue # Если номер контакта совпадает с номером контакта для удаления
                     # эта строка контакта не добавляется в список list_for_new_txt.
                     # Следующий код этого цикла пропускается и переходит к
                     # следующей итерации цикла. 
        list_for_new_txt.append(data_str) # Добавляется в конец списка строка с контактом.
    # Вызов функции print_contact()для отображения контакта для удаления.    
    print_contact(contact_for_del, contact_number_for_del)
    print(pr_line) # Элемент оформления.
    choice_for_del = input(' Удалить контакт- 1 Вернуться в главное меню- 2: ') # Ожидание выбора действия.
                                                                                # Результат присваивается
                                                                                # переменной choice_for_del.
    while True: # Бесконечный цикл для обработки выбранного действия.
        if choice_for_del == '1': # Если выбрано действие 'Удалить
                                  # контакт- 1'.
            os.remove(file_name) # Удаление текстового файла. Ниже будет создан новый текстовый файл.
                                 # В этом файле будет отсутсвовать строка с удалённым контактом.

            while True: # Бесконечный цикл для выборки из списка list_for_new_txt строк с контактами
                        # и записи их в текстовый файл.
                contact_for_wr = list_for_new_txt.pop(0) # Получает из списка элемент с индексом 0,
                                                         # присваивает его значение переменной
                                                         # contact_for_wr, а в списке 
                                                         # list_for_new_txt удаляет его.
                write_contact_txt(file_name, contact_for_wr) # Функция записи контакта в текстовый файл.
                if list_for_new_txt == []: # Если список пустой вывод на печать'Контакт №__ удалён' 
                                           # и выход из цикла.
                    pr_line_1 = f'                                 Контакт №{contact_number_for_del} '
                    pr_line_2 = 'удалён'
                    print(pr_line) # Элемент оформления.
                    print(pr_line_1 + pr_line_2)
                    break # Выход из цикла.
        elif choice_for_del == '2': # Иначе если выбрано действие 'Вернуться в главное меню- 2'
            break # Выход из цикла.
        else: # Иначе (если введённый символ не 1 и не 2). 
            print(' Неверный символ для выбора действия. Введите 1 или 2')
        break # Выход из цикла.

#--------------------------------------------НАЧАЛО ОСНОВНОЙ ПРОГРАММЫ--------------------------------------------    

# Переменной file_name присваивается строковое значение 
# с названием текстового файла. 
file_name = 'contact.txt' # Имя текстового файла.
pr_line = 2*'-----------------------------------------' # Для оформления.

while True:
    print(pr_line) # Элемент оформления.
    print('---------------------------------Выберите действие--------------------------------') # Элемент оформления.
    print(pr_line) # Элемент оформления.
    # Переменной choice присваивается строка ('1' или '2' или '3' или '4' или '5')
    # для выбора действия в условии.
    choice  = input(' Показать контакты- 1 Поиск- 2 Добавить контакт- 3 Удалить контакт- 4 Выход- 5: ')    
    if choice == '1':        
        print(pr_line) # Элемент оформления.
        try:
            # Вызов функции для чтения контактов из txt-файла и вывода на печать.
            read_contact_txt(file_name)
        except Exception: # Исключение.
            print(' Список контактов пуст. Добавьте контакт.')     
    elif choice == '2':
        print(pr_line) # Элемент оформления.
        find_str = input(' Введите информацию для поиска контакта: ')
        print(pr_line) # Элемент оформления.
        try:
            # Вызов функции для поиска контакта. 
            find_contact(file_name, find_str)
        except Exception: # Исключение.
            print(' Список контактов пуст. Добавьте контакт.')            
    elif choice == '3':
        print(pr_line) # Элемент оформления.
        # Вызов функции для получения с клавиатуры нового контакта.
        # Строка с новым контактом присваивается переменной contact. 
        contact = input_contact()
        # Вызов функции для записи подготовленой строки контакта в txt-файл.
        write_contact_txt(file_name, contact)
    elif choice == '4':
        print(pr_line) # Элемент оформления.
        contact_number_for_del = input(' Введите номер контакта для удаления или "м" для выхода в главное меню: ')
        # Если нажата "м" в русской раскладке клавиатуры, или "m" в
        # английской раскладке клавиатуры - вернуться в главное меню.
        if contact_number_for_del =='м' or contact_number_for_del =='m':
            continue # Возвращение в главное меню (в начало цикла).
        else: # Иначе обрабатывается введённый номер контакта для удаления.
            try:
               # Вызов функции для удаления контакта.
               del_contact(file_name, contact_number_for_del)
            except Exception: # Исключение.
                print(' Список контактов пуст. Добавьте контакт.')        
    elif choice == '5':
        # Вызов функции exit() для выхода из программы.
        sys.exit()        
    else:
        print(pr_line) # Для оформления.
        print(' Неверный символ для выбора действия. Введите 1, 2, 3, 4 или 5')

#--------------------------------------------КОНЕЦ ОСНОВНОЙ ПРОГРАММЫ-------------------------------------------- 
